"use strict";

angular.module("app", ["ui.router", "ngAnimate"]);
"use strict";

angular.module("app").constant("env", {
    apiUrl: "https://gateway.marvel.com/v1/public"
});
"use strict";

angular.module("app").config(["$stateProvider", "$urlRouterProvider", function ($stateProvider, $urlRouterProvider) {
    $stateProvider.state("home", {
        url: "/home",
        templateUrl: "public/home/home.template.html"
    }).state("details", {
        url: "/details/:characterId",
        templateUrl: "public/character-details-container/characterDetails.html",
        params: {
            characterId: null
        }
    });

    $urlRouterProvider.otherwise("/home");
}]);
"use strict";

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

angular.module("app").controller("characterDetailsController", ["characterComicsService", "$stateParams", characterDetailsController]);
function characterDetailsController(characterComicsService, $stateParams) {
    var vm = this;
    vm.characterComics = [];
    vm.offset = 0;
    vm.limit = 18;
    vm.totalCharacterComics = 0;
    vm.characterId = $stateParams.characterId;

    vm.getCharacterComics = function (reset) {
        characterComicsService.getAllCharacterComics(vm.characterId, vm.offset).then(function (response) {
            vm.totalCharacterComics = response.data.data.total;
            if (reset) {
                vm.characterComics = response.data.data.results;
            } else {
                vm.characterComics = [].concat(_toConsumableArray(vm.characterComics), _toConsumableArray(response.data.data.results));
            }
        }).catch(function (error) {
            console.log(error);
        });
    };

    vm.search = function () {
        vm.offset = 0;
        vm.getCharacterComics(true);
    };

    vm.verMais = function () {
        vm.offset += vm.limit;
        vm.getCharacterComics();
    };

    vm.goProTopo = function () {
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        });
    };

    vm.search();
};
"use strict";

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

angular.module("app").controller("homeController", ["charactersService", "$state", homeController]);

function homeController(charactersService, $state) {
    var vm = this;
    vm.characters = [];
    vm.offset = 0;
    vm.limit = 20;
    vm.totalCharacters = 0;

    vm.search = function () {
        vm.offset = 0;
        vm.getCharacters(true);
    };

    vm.getCharacters = function (reset) {
        charactersService.getAllCharacters(vm.characterName, vm.offset).then(function (response) {
            vm.totalCharacters = response.data.data.total;
            if (reset) {
                vm.characters = response.data.data.results;
            } else {
                vm.characters = [].concat(_toConsumableArray(vm.characters), _toConsumableArray(response.data.data.results));
            }
        }).catch(function (error) {
            console.log(error);
        });
    };

    vm.verMais = function () {
        vm.offset += vm.limit;
        vm.getCharacters();
    };

    vm.seeDetails = function (character) {
        $state.go("details", { characterId: character.id });
    };

    vm.goProTopo = function () {
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        });
    };
}
"use strict";

angular.module("app").service("characterComicsService", function ($http, env) {
    this.getAllCharacterComics = function (characterId, offset) {

        var params = {
            apikey: "f80694a77436906b8f07421eda71fe9b",
            hash: "cd95392a05f259bcf84be8c0847f7851",
            ts: 1
        };

        return $http.get(env.apiUrl + "/characters/" + characterId + "/comics", {
            params: params
        });
    };
});
"use strict";

angular.module("app").service("charactersService", function ($http, env) {
    this.getAllCharacters = function (character, offset) {

        var params = {
            apikey: "f80694a77436906b8f07421eda71fe9b",
            hash: "cd95392a05f259bcf84be8c0847f7851",
            ts: 1,
            offset: offset
        };

        if (character != null && character.length != 0 && character != undefined) {
            params["nameStartsWith"] = character;
        }

        return $http.get(env.apiUrl + "/characters", {
            params: params
        });
    };
});
"use strict";

angular.module("app").component("listCharacterItem", {
    bindings: {
        character: "<",
        seeDetails: "&"
    },
    templateUrl: "public/features/characters/components/list-character-item/listCharacters.html",
    controller: function controller() {},
    controllerAs: "ctrl"
});